<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_attackbar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize variables
obj_player_redheart.onceonly = 0;

spdmod = random_range(-1,1);

shutter = false;

countdown_to_destruction = 4;
scale_for_attack_anim = 1;
scale_addition = .5;

a = 0;
increase_attackanim = 0;

spd = 10 + spdmod;
alarm[1] = 5;
image_speed = 0;
phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ayy lmao
audio_play_sound(snd_fight_hit,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ayy lmao
with (obj_fight_hitbox) {
    instance_destroy()
}
instance_destroy()
obj_player_redheart.onceonly = 1;
global.buttonpos = 0;
obj_player_redheart.inbox = 0;
obj_player_redheart.image_alpha = 1;
obj_player_redheart.phy_position_x = obj_player_redheart.buttonx[global.buttonpos] + 10;
obj_player_redheart.phy_position_y = 444;
obj_player_redheart.nointeract = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// detect where it is on the bar, and if the player presses enter
if (keyboard_check_pressed(vk_enter) == true and alarm[10] &lt;= 0) {
    audio_play_sound(snd_fight_attack,10,false)
    alarm[10] = 30;
    shutter = true;
    alarm[11] = 17;
    spd = 0;
    
    if (phy_position_x &gt; display_get_gui_width()) {
        scale_addition = (0.5 * ((display_get_gui_width() - 32 - display_get_gui_width()/2)/(phy_position_x - display_get_gui_width()/2)))
    } else if (phy_position_x &lt; display_get_gui_width()) {
        scale_addition = (0.5 * ((display_get_gui_width()/2 - 32)/(display_get_gui_width()/2 - phy_position_x)))
    }
    scale_for_attack_anim = .5 + scale_addition;
}

phy_position_x += spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fight_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy both if the bar hits the end of the fight box
if (countdown_to_destruction != 0) {
    countdown_to_destruction -= 1
} else {
    alarm[10] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// redraw self on GUI

<<<<<<< HEAD
if (shutter == true) {
    image_speed = .3;
    increase_attackanim += (0.3);
    draw_sprite_ext(spr_attack_anim,increase_attackanim,200,200,scale_for_attack_anim,scale_for_attack_anim,0,c_white,255)
    
=======
if (shutter = true) {
    image_speed = .4;
    for (i = 0; i &lt;=0; i+=1) {
        
    }
>>>>>>> origin/master
}
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,0</point>
    <point>8,124</point>
    <point>0,124</point>
  </PhysicsShapePoints>
</object>
